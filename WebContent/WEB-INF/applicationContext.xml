<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
		 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		 http://www.springframework.org/schema/aop
		 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		 http://www.springframework.org/schema/security
         http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Seguridad -->

	<sec:http use-expressions="true">
		<sec:intercept-url pattern="/index.jsf" access="permitAll" />
		<sec:intercept-url pattern="/mayusculas.jsf" access="permitAll" />
		<sec:intercept-url pattern="/resultado.jsf" access="permitAll" />
		<sec:intercept-url pattern="/colores.jsf" access="hasAnyRole('user','administrador')" />
		<sec:intercept-url pattern="/empleados.jsf" access="hasRole('administrador')" />
		<sec:intercept-url pattern="/empleadosLista.jsf" access="hasRole('administrador')" />
		<!-- Con <sec:form-login sin atributos spring genera un login por defecto /> -->
		<sec:form-login 
		    login-page="/loginpeich.xhtml" 
			username-parameter="username"
			password-parameter="password" />
		<sec:logout logout-url="/index.jsf" />
	</sec:http>

	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="profe" password="profe"	authorities="administrador" />
				<sec:user name="otro" password="otro"	authorities="user" />
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>


	<!-- Transaction config + apply aspectos -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>

	<aop:config>
		<aop:pointcut id="negocioMethods"
			expression="execution(* profe.empleados.negocio.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="negocioMethods" />

		<aop:aspect id="aspectDeclaration" ref="aspectoApp">

			<aop:pointcut id="daoMethods"
				expression="execution(* profe.empleados.daos.*.*(..))" />

			<aop:pointcut id="allMethods" expression="execution(* profe.empleados..*.*(..))" />

			<aop:before method="muestraMensajeAntes" pointcut-ref="allMethods" />
			<aop:after-returning method="muestraMensajeDespues"
				pointcut-ref="allMethods" />

		</aop:aspect>
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- ********************* -->

	<!-- Aspectos -->

	<bean id="aspectoApp" class="profe.empleados.aspects.EmpleadosAspect" />

	<!-- ********************* -->

	<bean id="emDSMysql" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/empleados" />
		<property name="username" value="maza" />
		<property name="password" value="maza" />
	</bean>

	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="emDSMysql" />
		<property name="mappingResources">
			<list>
				<value>evento.hbm.xml</value>
				<value>empleado.hbm.xml</value>
				<value>nomina.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="daoFake" class="profe.empleados.daos.DAOEmpFake" lazy-init="true"/>

	<bean id="daoHB" class="profe.empleados.daos.DAOEmpHB" lazy-init="true">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>

	<bean id="negocioEmpleados" class="profe.empleados.negocio.NegocioEmpleadosImpl">
		<property name="dao" ref="daoHB" />
	</bean>

</beans>